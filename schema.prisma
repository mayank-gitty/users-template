// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.myprisma/client"
}

model User {
  id              String          @id @default(cuid())
  name            String          @default("")
  email           String          @unique @default("")
  password        String
  company         Company?        @relation("User_company", fields: [companyId], references: [id])
  companyId       String?         @map("company")
  createdAt       DateTime?       @default(now())
  address         String          @default("")
  phone           String          @default("")
  role            String?
  photograph      String          @default("")
  resume          String          @default("")
  resume_headline String          @default("")
  itskills        ItSkill[]       @relation("User_itskills")
  education       AddEducation[]  @relation("User_education")
  project         Project[]       @relation("User_project")
  active          Boolean         @default(true)
  open_to_work    Boolean         @default(true)
  keyskills       KeySkill[]      @relation("User_keyskills")
  experience      AddExperience[] @relation("User_experience")
  stepperFilled   Boolean         @default(false)
  profile_summary String          @default("")

  @@index([companyId])
}

model Code {
  id     String  @id @default(cuid())
  expire Boolean @default(false)
  value  String  @default("")
}

model ItSkill {
  id                 String @id @default(cuid())
  name               String @default("")
  masterId           String @default("")
  version            String @default("")
  lastUsed           String @default("")
  experience         String @default("")
  from_User_itskills User[] @relation("User_itskills")
}

model KeySkill {
  id                  String  @id @default(cuid())
  name                String  @default("")
  version             String  @default("")
  lastUsed            String  @default("")
  master              Boolean @default(false)
  experience          String  @default("")
  from_User_keyskills User[]  @relation("User_keyskills")
}

model Project {
  id                 String  @id @default(cuid())
  projectTitle       String  @default("")
  client             String  @default("")
  workFromYear       String  @default("")
  workFromMonth      String  @default("")
  projectStatus      String?
  detailsOfProject   String  @default("")
  projectSite        String?
  projectLocation    String  @default("")
  natureOfEmployment String?
  teamSize           String  @default("")
  role               String  @default("")
  roleDescription    String  @default("")
  skillUsed          String  @default("")
  from_User_project  User[]  @relation("User_project")
}

model Company {
  id                String @id @default(cuid())
  name              String @default("")
  from_User_company User[] @relation("User_company")
}

model AddEducation {
  id                  String  @id @default(cuid())
  school              String  @default("")
  degree              String  @default("")
  field_of_study      String  @default("")
  grade               String  @default("")
  activities          String  @default("")
  description         String  @default("")
  start_year          String?
  start_year_month    String?
  end_year            String?
  end_year_month      String?
  from_User_education User[]  @relation("User_education")
}

model AddExperience {
  id                   String  @id @default(cuid())
  title                String  @default("")
  employment_type      String?
  company              String  @default("")
  location             String  @default("")
  location_type        String?
  currently_working    Boolean @default(false)
  start_year           String?
  start_year_month     String?
  end_year             String?
  end_year_month       String?
  from_User_experience User[]  @relation("User_experience")
}
